version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point # directory where steps will run
    environment:
      CC_TEST_REPORTER_ID: 555
      NODE_ENV: development
    docker: # run the steps with Docker
      - image: circleci/node # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - run: npm install mocha-junit-reporter
      - run: mkdir reports
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: npm test
          command: ./node_modules/.bin/nyc ./node_modules/.bin/mocha --recursive --timeout=10000 --exit --reporter mocha-junit-reporter --reporter-options mochaFile=reports/mocha/test-results.xml
          when: always
      - run:
          name: eslint
          command: |
            ./node_modules/.bin/eslint ./ --format junit --output-file ./reports/eslint/eslint.xml
          when: always
      - run:
          name: Setup Code Climate test-reporter
          command: |
            # download test reporter as a static binary
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build
          when: always

          # Upload results

      - store_test_results:
          path: reports

      - store_artifacts:
          path: ./reports/mocha/test-results.xml

      - store_artifacts:
          path: ./reports/eslint/eslint.xml

      - store_artifacts: # upload test coverage as artifact
          path: ./coverage/lcov.info
          prefix: tests
      # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples